error: Undefined Behavior: not granting access to tag <BORROW_IDX> because incompatible item is protected: [SharedReadOnly for <BORROW_IDX> (call 937)]
  --> $DIR/aliasing_mut2.rs:LL:CC
   |
LL | pub fn safe(_x: &i32, _y: &mut i32) {} //~ ERROR protect
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not granting access to tag <BORROW_IDX> because incompatible item is protected: [SharedReadOnly for <BORROW_IDX> (call 937)]
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental
   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information
help: <BORROW_IDX> was created by a retag at offsets [$HEX..$HEX]
  --> $DIR/aliasing_mut2.rs:LL:CC
   |
LL |     let xref = &mut x;
   |                ^^^^^^
help: <BORROW_IDX> was protected due to <BORROW_IDX> which was created here
  --> $DIR/aliasing_mut2.rs:LL:CC
   |
LL |     safe_raw(xshr, xraw);
   |              ^^^^
help: this protector is live for this call
  --> $DIR/aliasing_mut2.rs:LL:CC
   |
LL | pub fn safe(_x: &i32, _y: &mut i32) {} //~ ERROR protect
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: inside `safe` at $DIR/aliasing_mut2.rs:LL:CC
note: inside `main` at $DIR/aliasing_mut2.rs:LL:CC
  --> $DIR/aliasing_mut2.rs:LL:CC
   |
LL |     safe_raw(xshr, xraw);
   |     ^^^^^^^^^^^^^^^^^^^^

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to previous error

